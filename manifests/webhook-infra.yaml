apiVersion: v1
kind: ServiceAccount
metadata:
  name: validating-webhook-sa
  namespace: webhook-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: validating-webhook-role
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: validating-webhook-rolebinding
subjects:
- kind: ServiceAccount
  name: validating-webhook-sa
  namespace: webhook-system
roleRef:
  kind: ClusterRole
  name: validating-webhook-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: validating-webhook
  namespace: webhook-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: validating-webhook
  template:
    metadata:
      labels:
        app: validating-webhook
    spec:
      serviceAccountName: validating-webhook-sa
      imagePullSecrets:
      - name: github-registry-secret
      containers:
      - name: validating-webhook
        image: ghcr.io/kaplunb/validating-webhook:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8443
        volumeMounts:
        - name: tls
          mountPath: "/etc/webhook/tls"
          readOnly: true
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: tls
        secret:
          secretName: rancher-desktop-wildcard-tls
---
apiVersion: v1
kind: Service
metadata:
  name: validating-webhook-svc
  namespace: webhook-system
spec:
  selector:
    app: validating-webhook
  ports:
    - name: webhook
      port: 443
      targetPort: 8443
  type: NodePort
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: validating-webhook-network-policy
  namespace: webhook-system
spec:
  podSelector:
    matchLabels:
      app: validating-webhook
  policyTypes:
  - Ingress
  ingress:
  - from:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 8443